.. raw:: html

   <!--

   ============================================================================

      DO NOT EDIT THIS FILE! It was generated using Sphinx from:

      Origin:   $URL$
      Revision: $Rev$

   ============================================================================

   -->

.. meta::
    :description: Build and installation instructions for MUSE.

============
Installation
============

See the `BASIS guide on software installation`_ for a complete list of build tools and
detailed installation instructions.


Prerequisites
=============

.. raw:: html
    
    <br />

.. The tabularcolumns directive is required to help with formatting the table properly
   in case of LaTeX (PDF) output.

.. tabularcolumns:: |p{3.75cm}|m{1.5cm}|p{10cm}|

+---------------------+---------+----------------------------------------------------------------------------+
| Dependency          | Version | Description                                                                |
+=====================+=========+============================================================================+
| BASIS_              | 2.1.0   | A meta-project developed at SBIA_ to standardize the software development. |
+---------------------+---------+----------------------------------------------------------------------------+
| DRAMMS_             | 1.4.1   | A registration algorithm developed at SBIA_ to warp images.		     |
+---------------------+---------+----------------------------------------------------------------------------+
| ANTS_               | 1.9.x   | A registration algorithm developed at PICSL_ to warp images.		     |
+---------------------+---------+----------------------------------------------------------------------------+
| MICO_               | 1.0.0   | A segmentation algorithm developed at SBIA_ to segment images.	     |
+---------------------+---------+----------------------------------------------------------------------------+
| AFNI_               | 	| Using the version built on 2008_07_18_1710				     |
+---------------------+---------+----------------------------------------------------------------------------+
| FSL_                | 4.1.5   | A comprehensive library of analysis tools for brain imaging data 	     |
+---------------------+---------+----------------------------------------------------------------------------+
| NIBABEL_	      | 1.2.0   | A python package for read and write access to common medical file formats  |
+---------------------+---------+----------------------------------------------------------------------------+
| NUMPY_              | 1.6.1   | A python package for scientific computing				     |
+---------------------+---------+----------------------------------------------------------------------------+

\* The versions listed are the minimum versions of the softwares for which the MUSE package was tested.

.. _BASIS: http://www.cbica.upenn.edu/sbia/software/basis/index.html
.. _SBIA: http://www.cbica.upenn.edu/sbia/index.html
.. _PICSL: http://www.http://picsl.upenn.edu/

.. _DRAMMS: http://www.cbica.upenn.edu/sbia/software/dramms/download.html
.. _ANTS: http://stnava.github.io/ANTs/
.. _MICO: https://www.cbica.upenn.edu/sbia/software/request.php?software=mico
.. _FSL: http://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FslInstallation
.. _SCIKIT-LEARN: http://scikit-learn.org/stable/install.html
.. _NIBABEL: http://nipy.org/nibabel/installation.html
.. _NUMPY: http://docs.scipy.org/doc/numpy/user/install.html
.. _AFNI: http://afni.nimh.nih.gov/afni/download



.. raw:: html
    
    <br />


Job Scheduler
=============

If you have access to a computing cluster which has a job scheduler/queuing software (SGE, PBS etc) installed, it 
can be used to significantly reduce the (wall-clock) time it will take for the MUSE software to produce the results. 
During the installation process, you can initialize the ``SCHEDULER`` variable with the particular version of your 
job scheduler. Currently, there are four options that are supported. You can select the one that best fits your system::

   SGE  - Sun Grid Engine
   PBS  - Portable Batch System
   NONE - No queuing system (default)
   MISC - User defined setting
   
If you have a different queuing software and you select the "MISC" option, you need to modify the 
**src/schedulerSettings/SettingsMISC.sh** file within the package with the appropriate options and arguments that are specific 
to your queuing system. You can refer to the corresponding files for SGE and PBS as examples.


Configure
=========

1. Extract source files::

    tar -xzf muse-3.0.0-source.tar.gz

2. Create build directory::

    mkdir muse-3.0.0-build

3. Change to build directory::

    cd muse-3.0.0-build

4. Run CMake_ to configure the build tree by using one of the following commands::

    cmake -D CMAKE_INSTALL_PREFIX:STRING=/Full/path/to/install/muse/ 
    	  -D SCHEDULER:STRING=??? 
    	  ../muse-3.0.0-source

Build
=====

After the configuration of the build tree, the software can be build using `GNU Make`_::

    make

Test (Optional)
===============

After the build of the software, optionally run the tests using the command::

    make test

Allow 30-60 mins for the test to finish. In case of a test failure, re-run the test, but this time by executing CTest_
directly with the ``-V`` option to enable verbose output and redirect the output
to a text file:

.. code-block:: bash

    ctest -V >& muse-test.log

and attach the file ``muse-test.log`` to the issue report.

Install
=======

The final installation copies the built files and additional data and documentation
files to the installation directory specified using the ``CMAKE_INSTALL_PREFIX``
option during the configuration of the build tree::

    make install
    
After the successful installation, the build directory can be removed again.

.. _BASIS: http://www.cbica.upenn.edu/sbia/software/basis/index.html
.. _BASIS guide on software installation: http://www.cbica.upenn.edu/sbia/software/basis/howto/install.html
.. _CMake: http://www.cmake.org/
.. _CTest: http://www.cmake.org/cmake/help/v2.8.8/ctest.html
.. _GNU Make: http://www.gnu.org/software/make/
.. _SBIA:  http://www.cbica.upenn.edu/sbia/index.html


